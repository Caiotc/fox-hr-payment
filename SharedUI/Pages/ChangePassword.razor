@page "/changePassword"
@using SharedUI.Data;
@using SharedUI.Data.UserLogin;
@using SharedUI.Services;
@inject NavigationManager NavigationManager


@inject ApiHelper apiHelper
@inject LogedUser LogedUser;

<EditForm Model="@changePassword" OnValidSubmit="@Submit" class="MyEditClass" style="
    height:100%;
    width:100%;
    display:flex;
    flex-direction: column;
    justify-content: center;
    padding:10%;
    gap:1rem;
    background-color:wheat;
">
    <DataAnnotationsValidator />

    <div class="logo-wrapper">
        <span class="logo-title">
            Insira sua senha antiga e, em seguida, a nova.
        </span>
    </div>
    <div class="form-group ">
        <label for="inputUserName" class="form-label">Senha antiga</label>
        <InputText type="password" id="inputUserName" class="form-control" @bind-Value="@changePassword.oldPassword" placeholder="Senha antiga" />
        <ValidationMessage For="@(()=> changePassword.oldPassword)"></ValidationMessage>
    </div>

    <div class="form-group ">
        <label for="inputPassword" class="form-label">Nova senha</label>
        <InputText type="password" id="inputPassword" class="form-control" @bind-Value="@changePassword.newPassord" placeholder="Nova senha" />
        <ValidationMessage For="@(()=> changePassword.newPassord)"></ValidationMessage>
    </div>

    <button type="submit" class="btn btn-login">
        Confirmar
    </button>

    <button type="submit" class="btn btn-login" @onclick="@GoToAdminHub">
        voltar
    </button>

    @if (success)
    {
        <div>
            Senha alterada com sucesso
        </div>
    }
    @if (fail)
    {
     <div>
         Verifique seus dados e tente novamente
</div>
    }
</EditForm>



@code {
    ChangePasswordModel changePassword;
    bool success = false;
    bool fail = false;

    protected override void OnInitialized()
    {
        changePassword = new ChangePasswordModel();
    }
    public async Task Submit()
    {
        this.success = false;
        this.fail = false;
        var result = await apiHelper.ChangePasswordAsync(LogedUser.username, changePassword.oldPassword, changePassword.newPassord);
        if (result.IsSuccessStatusCode)
        {
            this.success = true;
            this.fail = false;

        }
        else
        {
            this.success = false;
            this.fail = true;
        }
    }
    public void GoToAdminHub()
    {
        if (LogedUser.roleId == 1)
            NavigationManager.NavigateTo("adminHub");
        else
            NavigationManager.NavigateTo("employeeHub");
    }
}
